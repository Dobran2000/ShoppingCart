// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package DiagrameClase;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Scanner;



public class Admin extends User {
	
	public Admin() {
    }
	
	ArrayList<Product> products=new ArrayList<Product>();
	
	public Admin(String Username,String Password)
	{
		super(Username,Password);
	}

   public void read(String csvFile) {
			
	      String splitBy = ",";  
		  try {
		      File file = new File(csvFile);
		      FileReader fr = new FileReader(file);
		      BufferedReader br = new BufferedReader(fr);
		      String line = " ";
		      String[] tempArr;
		      while ((line = br.readLine()) != null) {
		        tempArr = line.split(splitBy);
		        for (String tempStr: tempArr) {
		          System.out.print(tempStr + " ");
		        }
		        System.out.println();
		      }
		      br.close();
		    }
		    catch(IOException ioe) {
		      ioe.printStackTrace();
		    }
     }
	
     public void addProductToStock(String filename)
     {
    	 Scanner scanner = new Scanner(System.in);
    	 System.out.println("Introduceti numele produsul nou");
    	 String productName = scanner.nextLine();
    	 System.out.println("Introduceti pretul produsului");
    	 double price = scanner.nextDouble();
    	 System.out.println("Introduceti stoc ");
    	 int stock = scanner.nextInt();
    	 
    	 PrintWriter csvWriter;
         try {
             /*1. declare stringBuffer*/
             StringBuffer oneLineStringBuffer = new StringBuffer();

             File file = new File(filename);
             if (!file.exists()) {
                 file = new File(filename);
             }
             csvWriter = new PrintWriter(new FileWriter(file, true));

             oneLineStringBuffer.append("\n");
             oneLineStringBuffer.append(productName);
             oneLineStringBuffer.append(",");
             oneLineStringBuffer.append(price);
             oneLineStringBuffer.append(",");
             oneLineStringBuffer.append(stock);

             csvWriter.print(oneLineStringBuffer);

             csvWriter.close();

         } catch (Exception e) {
             e.printStackTrace();
         }
     }
   
     public void updateStock(String filename)
     {
    	 Scanner scanner = new Scanner(System.in);
    	 System.out.println("Introduceti numele produsului ");
    	 String productName= scanner.nextLine();
    	 
    	 System.out.println("Introduceti stocul produsului ");
    	 String stock= scanner.nextLine();
    	 
    	   String line = "";
           String splitBy = ",";

           boolean find = false;

           try {
               BufferedReader br = new BufferedReader(new FileReader(filename));

               while ((line = br.readLine()) != null) {
                   String[] temp = line.split(splitBy);

                   if ((temp[0].equals(productName)))
                    {
                       temp[2] = stock;
                    }
                   System.out.println("Stock = " +  temp[2]
                      );
                   
               }
           }
           catch(IOException ioe) {
 		      ioe.printStackTrace();
 		    }
     }
     
     void BuildProductCatalog()
     {
         Product meat1 = new Product("Ship", 30, 200);
         Product meat2 = new Product("Cow", 45, 300);

         Product seafood1 = new Product("shrimp", 100, 400);
         Product seafood2 = new Product("Octopus", 200, 500);

         Product fish1 = new Product("Salmon", 70, 350);
         Product fish2 = new Product("Mackerel", 300, 100);

         products.add(meat1);
         products.add(meat2);
         products.add(seafood1);
         products.add(seafood2);
         products.add(fish1);
         products.add(fish2);
     }

   public void GetCatalogDescription()
   {
       for(int i=0;i<products.size();i++)
           products.get(i).ViewProduct();
   }
   
   
   public void showAllProducts()
   {
  	 for(int i=0;i<products.size();i++)
  	 { 
  		 System.out.println("Produsul" + products.get(i).getProductName()
  				             + " pretul "+ products.get(i).getPrice()+
  				             " stock "+products.get(i).getStock());
  	 }
   }
  
     
};

